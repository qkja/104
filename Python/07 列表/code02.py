"""
列表的切片
"""

# 切片是取出子列表
# a = [1, 2, 3, 4, 5]
# # 这里就是下标, 这是前闭后开[)
# print(a[1:3])
# print(a[1:-1])

# 使用切片的时候,省略边界
# a = [1, 2, 3, 4, 5]
# # 省略后边界
# print(a[1:])
# # 省略前边界
# print(a[:1])
# a = [1, 2, 3, 4, 5]
# # 开始边界和结束边界都省略
# print(a)

# 初次之外,切片还可以指定步长
# a = [1, 2, 3, 4, 5]
# print(a[0::2])
# 注意,步长操作可以是负数,这代表从后向前取

# a = [1, 2, 3, 4, 5]
# print(a[::-1])
# 当我们切片的范围超出我们的下标范围, 不会报错,只会尽可能将我们的结果给我们


# 列表的遍历

# 1. 使用for循环
# a = [1, 2, 3, 4, 5]
# for elem in a:
#     print(elem)
# 2. 使用for循环,
# print("---------------------------")
# for i in range(0, len(a)):
#     print(a[i])


# 列表的插入操作

# a = [1, 2, 3, 4, 5]
# # 1. 尾插
# a.append(6)
# print(a)

# 进行任意位置的插入
# a = [1, 2, 3, 4]
# a.insert(1, "hello")
# print(a)



# 列表的查找和删除

# a = [1, 2, 3, 4]
#
# # 查找元素, 使用in来判定是不是存在
# print(1 in a)
# print(10 in a)
# # 这里的in 操作是遍历的操作, 这里还有一个not in 与之搭配,效率不咋样


# 不仅仅是存在,还可以得到我们的下标
# a = [1, 2, 3, 4]
# print(a.index(1))
# 如果不存在,那么此时就会被报错,或者是抛出异常
# print(a.index(5))

# a = [1, 2, 3, 4]
# # 关于删除操作
# # 1. 尾删
# a.pop()
# print(a)

# a = [1, 2, 3, 4]
#
# # 使用pop可以删除任意位置的元素, 可以传入下标
# a.pop(0)
# print(a)

# 3. 使用remove,这里可以按照值来删除, 删除第一个位置的元素
# a = [1, 1, 2, 3, 4]
# a.remove(1)
# print(a)


